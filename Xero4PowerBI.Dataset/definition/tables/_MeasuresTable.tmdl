table _MeasuresTable
	lineageTag: 7eed255a-d37e-4856-81ef-bf4207c680bf

	measure CFBSOpening = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, 
			                CALCULATE(SUM(BalanceSheet[Amount]), FILTER(ALL(DatesByMonth), (DatesByMonth[Date] = MAX(DatesByMonth[DateLM])))) * CashFlowTotalsTypes[DrCrSign])
			                , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseOpeningBalance] = TRUE))
			    )
			```
		lineageTag: 870dc474-dbee-4d6a-a3c6-b4867d27ddbd

	measure CFBSClosing = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, CALCULATE(SUM(BalanceSheet[Amount])) * CashFlowTotalsTypes[DrCrSign])
			            , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseClosingBalance] = TRUE))
			    )
			```
		lineageTag: 036777d9-9989-4927-896c-a084ecce151e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CFBSMovement = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, CALCULATE(SUM(BalanceSheet[Amount])) * CashFlowTotalsTypes[DrCrSign])
			            , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseMovement] = TRUE)
			    ) - IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, 
			                CALCULATE(SUM(BalanceSheet[Amount]), FILTER(ALL(DatesByMonth), (DatesByMonth[Date] = MAX(DatesByMonth[DateLM])))) * CashFlowTotalsTypes[DrCrSign])
			                , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseMovement] = TRUE))
			    ))
			```
		lineageTag: 1fe31e1f-5e6e-4792-afe1-fd2fdebec013

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CFPLMovement = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, CALCULATE(SUM(ProfitAndLoss[Amount])) * CashFlowTotalsTypes[DrCrSign]), FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseMovement] = TRUE))
			    )
			```
		lineageTag: 0c3dd170-13ee-4619-a6a0-585ac5097620

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CFAmount = ```
			
			   VAR varAmount = 0
			      + [CFBSOpening]
			      + [CFBSMovement]
			      + [CFPLMovement]
			      + [CFBSClosing]
			
			   VAR varNetAmount = IF(varAmount <> 0, varAmount, BLANK())
			
			   RETURN varNetAmount
			```
		formatString: #,##0;(#,##0)
		lineageTag: bc5bfe08-e131-4d29-8cdc-14ab3a18c72d

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Net Cash Movement' = _MeasuresTable[CFBSMovement] + _MeasuresTable[CFPLMovement]
		lineageTag: 754e44d6-347d-4484-b0a3-03fbf7259e6b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CurrentBalance = CALCULATE(SUM(CurrentExecutiveSummary[ThisMonth]),CurrentExecutiveSummary[Description]="Closing bank balance")
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: 093527a7-f566-4529-89f5-865a35290386

	measure CashIn =
			CALCULATE(SUM(AccrualJournalTableRecent[GrossAmount]),
			         //   AccrualJournalTableRecent[JournalDate] > TODAY() - 60,
			            AccrualJournalTableRecent[AccountType]="BANK",
			            AccrualJournalTableRecent[SourceType] IN {"ACCRECPAYMENT","CASHREC"})
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: a75bb5e0-042b-4fcd-b0a9-448e09f835a2

	measure CashOut =
			CALCULATE(SUM(AccrualJournalTableRecent[GrossAmount]),
			          //  AccrualJournalTableRecent[JournalDate] > TODAY() - 60 ,// 60 days for testing
			            AccrualJournalTableRecent[AccountType]="BANK",
			            AccrualJournalTableRecent[SourceType] IN {"ACCPAYPAYMENT","CASHPAID","EXPPAYMENT"})  * -1
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 79f77d1a-a7f6-441d-99c7-6327bff727b7

	measure Revenue = CALCULATE(SUM(CurrentProfitAndLossTable[Amount]),CurrentProfitAndLossTable[AccountName]="Total Income")
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: eed2e6b2-f493-445c-8900-19ef59e650ed

	measure CumulativeCash = ```
			CALCULATE(
			    Sum(AccrualJournalTableRecent[GrossAmount]),  
			        AccrualJournalTableRecent[AccountType]="BANK",
			        AccrualJournalTableRecent[SourceType] IN {"ACCRECPAYMENT","CASHREC","ACCPAYPAYMENT","CASHPAID","EXPPAYMENT"},
			        ISONORAFTER(AccrualJournalTableRecent[JournalDate], MAX(AccrualJournalTableRecent[JournalDate]), DESC)
			    ) + [Day30OpeningBalance]
			
			```
		lineageTag: b33b6608-4f92-4285-8a39-137a2d87d81d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Day30OpeningBalance = SUMX(FILTER(Day31BalanceSheetTable,[AccountName]="Total Bank"),[Amount])
		lineageTag: 1f14fbcf-ea57-47a1-a5ef-ef44ca3ffb99

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Day31Revenue = CALCULATE(SUM(Day31ProfitAndLossTable[Amount]),Day31ProfitAndLossTable[AccountName]="Total Income")
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 94eb9388-895e-4659-89a8-1c2e246ed115

	measure RevenueGrowth = _MeasuresTable[Revenue]/_MeasuresTable[Day31Revenue]
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 726639eb-0ea2-444a-a0d9-5878bdfa8268

	measure ReceivablesOutstanding = SUMX(ALL(AccountsReceivable),[AmountDue])
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 723bc0fe-c66a-4616-9efd-ca3235d24bb0

	measure ReceivablesOverdue = SUMX(FILTER(ALL(AccountsReceivable), AccountsReceivable[DueDate] < TODAY()),[AmountDue])
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 64cd263a-5e44-47ac-a1f0-ffa63141ae15

	measure CostOfSales = CALCULATE(SUM(CurrentProfitAndLossTable[Amount]),CurrentProfitAndLossTable[AccountName]="Total Cost of Sales")
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 1a4fe676-7a26-4042-9628-3513e61b61c8

	measure OperatingExpenses = CALCULATE(SUM(CurrentProfitAndLossTable[Amount]),CurrentProfitAndLossTable[AccountName]="Total Operating Expenses")
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 9bf63e34-845c-40e6-a1b4-e03a61162108

	measure GrossProfit = CALCULATE(SUM(CurrentProfitAndLossTable[Amount]),CurrentProfitAndLossTable[AccountName]="Gross Profit")
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: 525fec0f-b0ee-40f0-9772-85f8258435ec

	partition _MeasuresTable = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Removed Columns" = Table.RemoveColumns(Source,{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

