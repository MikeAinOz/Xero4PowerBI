table _MeasuresTable
	lineageTag: 7eed255a-d37e-4856-81ef-bf4207c680bf

	measure CFBSOpening = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, 
			                CALCULATE(SUM(BalanceSheet[Amount]), FILTER(ALL(DatesByMonth), (DatesByMonth[Date] = MAX(DatesByMonth[DateLM])))) * CashFlowTotalsTypes[DrCrSign])
			                , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseOpeningBalance] = TRUE))
			    )
			```
		lineageTag: 870dc474-dbee-4d6a-a3c6-b4867d27ddbd

	measure CFBSClosing = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, CALCULATE(SUM(BalanceSheet[Amount])) * CashFlowTotalsTypes[DrCrSign])
			            , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseClosingBalance] = TRUE))
			    )
			```
		lineageTag: 036777d9-9989-4927-896c-a084ecce151e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CFBSMovement = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, CALCULATE(SUM(BalanceSheet[Amount])) * CashFlowTotalsTypes[DrCrSign])
			            , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseMovement] = TRUE)
			    ) - IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, 
			                CALCULATE(SUM(BalanceSheet[Amount]), FILTER(ALL(DatesByMonth), (DatesByMonth[Date] = MAX(DatesByMonth[DateLM])))) * CashFlowTotalsTypes[DrCrSign])
			                , FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseMovement] = TRUE))
			    ))
			```
		lineageTag: 1fe31e1f-5e6e-4792-afe1-fd2fdebec013

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CFPLMovement = ```
			
			    IF(
			        SELECTEDVALUE(CashFlowTotals[IsAccountClassification]) = FALSE
			        && (ISFILTERED(Accounts) = TRUE() || ISFILTERED(AccountsTypes) = TRUE()), 
			            BLANK(), 
			            CALCULATE(SUMX(CashFlowTotalsTypes, CALCULATE(SUM(ProfitAndLoss[Amount])) * CashFlowTotalsTypes[DrCrSign]), FILTER(CashFlowTotalsTypes, CashFlowTotalsTypes[UseMovement] = TRUE))
			    )
			```
		lineageTag: 0c3dd170-13ee-4619-a6a0-585ac5097620

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure CFAmount = ```
			
			   VAR varAmount = 0
			      + [CFBSOpening]
			      + [CFBSMovement]
			      + [CFPLMovement]
			      + [CFBSClosing]
			
			   VAR varNetAmount = IF(varAmount <> 0, varAmount, BLANK())
			
			   RETURN varNetAmount
			```
		formatString: #,##0;(#,##0)
		lineageTag: bc5bfe08-e131-4d29-8cdc-14ab3a18c72d

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Net Cash Movement' = _MeasuresTable[CFBSMovement] + _MeasuresTable[CFPLMovement]
		lineageTag: 754e44d6-347d-4484-b0a3-03fbf7259e6b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition _MeasuresTable = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Removed Columns" = Table.RemoveColumns(Source,{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

